package com.pranay.passmaker;

import android.app.Application;
import android.support.v4.content.res.TypedArrayUtils;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

import java.util.*;
import java.util.Arrays;

public class password_maker extends AppCompatActivity {

    public void makePass(View view){
        class pranay extends Application{
            EditText str = (EditText) findViewById(R.id.stringIn);
            String str2 = str.getText().toString();
            char[] arr = str2.toCharArray();


            String upper_lower(String s) {
                String s1="";
                for (int i = 0; i < s.length(); ++i) {
                    if (i%2 == 0) {
                        s1 = s1 + Character.toUpperCase(s.charAt(i));
                    } else {
                        s1 = s1 + Character.toLowerCase(s.charAt(i));
                    }
                }
                return s1;
            }

            String join_arg(String[] arg) {
                String s1="";
                int i = 0;
                for(i = 0; i < arg.length; ++i) {
                    s1 = s1 + Integer.toString(i) + arg[i];
                }
                return s1 + Integer.toString(i+1);
            }

            public String reverse(String input){
                char[] in = input.toCharArray();
                int begin=0;
                int end=in.length-1;
                char temp;
                while(end>begin){
                    temp = in[begin];
                    in[begin]=in[end];
                    in[end] = temp;
                    end--;
                    begin++;
                }
                return new String(in);
            }

            String ins_symbols(String s) {
                String ch="$%/()=";
                String s1="";
                int j=0;
                for(int i = 0; i < s.length(); ++i) {
                    s1 = s1 + s.charAt(i);
                    if ((i+1)%2 == 0) {
                        s1 = s1 + ch.charAt(j);
                        j = j+1;
                        if (j==ch.length()) {
                            j = 0;
                        }
                    }
                }
                return s1;
            }

            public void main(String[] args) {
                pranay obj = new pranay();
                if (obj.arr.length > 0) {
                    int t = 0;
                    String[] arg = args;
                    if (obj.arr.length < 9) {
                        System.out.println("I need at least 9 characters!");
                    } else {
                        for (int i = 0; i < str2.length(); ++i) {
                            arg[i] = obj.upper_lower(obj.reverse(arg[i]));
                        }
                        System.out.println("$#" + obj.ins_symbols(obj.join_arg(arg)));
                    }
                }

            }

        }

        Toast.makeText(password_maker.class,arg[0],Toast.LENGTH_SHORT).show();
        Log.i("Info", "Button was pressed");

    }
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_password_maker);
    }
}
